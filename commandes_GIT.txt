https://gist.github.com/hofmannsven/6814451

Pour des raisons de sécurité et de clarté, il est important d'ignorer certains fichiers dans Git, tels que :

	-Tous les fichiers de configuration (config.xml, databases.yml, .env...)
	-Les fichiers et dossiers temporaires (tmp, temp/...)
	-Les fichiers inutiles comme ceux créés par votre IDE ou votre OS (.DS_Store, .project...)

Le plus crucial est de ne JAMAIS versionner une variable de configuration, que ce soit un mot de passe, une clé secrète ou quoi que ce soit de ce type. Versionner une telle variable conduirait à une large faille de sécurité, surtout si vous mettez votre code en ligne sur GitHub !

-Cloner un répo :
git clone "url du repo"

-Créer un fichier :
touch "nomDuFichier.extension"

-Créer un dossier :
mkdir "nom du dossier"

-Modifier un fichier (avec sublime text)
subl "fichier a modifier"

-Activer un dossier comme repo :
git init

-Ajouter des fichiers à commit :
git add "fichier à ajouter" --> ajoute un seul fichier
git add . --> ajoute tt les fichiers du répertoire

-Enregistrer les modifications(commit) :
git commit --> enregistre sans commentaires
git commit -m "commentaire" --> enregistre avec commentaire
git commit -a --> met à jour les fichiers déjà ajouté puis commit

-Envoyer ses commits sur github :
git push origin master

-Visualiser l'historique des commits :
git log

-Se positionner sur un commit :
git checkout "SHA du commit" --> SHA = identifiant du commit

-Se repositionner sur la branche principale :
git checkout master

-Annuler un commit (commit les modifications inverses en fait) :
git revert "SHA du commit"

-Modifier le commentaire d'un commit :
git commit --amend -m "nouveau commentaire"

-Annuler tout les changements non commit :
git reset --hard

-Mettre à jour son repo local :
git pull origin master

-Afficher les branches (* indique votre position):
git branch

-Créer une branche :
git branch "nom de la branche"

-Se positionner sur une branche :
git checkout "nom de la branche"

-Créer et se positionner dans une branche :
git checkout -b "nom de la branche"

-Fusionner 2 branches :
(Dans branche A) git merge "branche B"

-Afficher les modifications faites sur un fichier :
git blame "fichier à inspecter"

-Afficher les détails d'un commit :
git show "SHA du commit"